/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define LY_DEFAULT   0
#define LY_NUMBERS   1
#define LY_SHIFTED_N 2
#define LY_CURSORS   3
#define LY_FUNCTIONS 4 


// https://zmk.dev/docs/keymaps/behaviors/sticky-layer
// 
// ...
// By default, sticky layers stay pressed for a second if you don't press any other key.
// You can configure this with the release-after-ms setting (see below).
// ...
&sl {
    release-after-ms = <5000>;
    ignore-modifiers;
};        


/ {
    behaviors {
        hrht: hrht {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
        };
        
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&kp>;
        };

        gltog: generic_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&tog>, <&kp>;
        };

        glstk: generic_layer_stick {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&sl>, <&kp>;
        };

        // If you wish to ensure that a layer is toggled on or off specifically,
        // rather than switching between the two states,
        // then you can do so with the toggle-mode property.
        // Define a new behavior and assign "on" or "off" to toggle-mode.
        // https://zmk.dev/docs/keymaps/behaviors/layers#configuration
        gltog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };        

        gltog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        // A tap-dance key invokes a different behavior (e.g. kp) corresponding to how many times it is pressed.    
        // https://zmk.dev/docs/keymaps/behaviors/tap-dance
        td_menus: tap_dance_popup_main_menus {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mac_contextcursor>, <&mac_mainmenucursor>;
        };
    };

    macros {
        // Macro to open the context menu, scroll to the first item and switch to the cursor layer.
        mac_contextcursor: mac_contextcursor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings = <&kp K_CONTEXT_MENU &kp DOWN &gltog_on LY_CURSORS>;
        };

        // Macro to open the main menu, scroll to the first item and switch to the cursor layer.
        mac_mainmenucursor: mac_mainmenucursor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings = <&kp LALT &kp DOWN &gltog_on LY_CURSORS>;
        };

        // Macro to exit the cursor layer and press enter to launch the selected item.
        mac_enterexitpopup: mac_enterexitpopup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings = <&gltog_off LY_CURSORS &kp KP_ENTER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 { // Home
// | SW6  | SW7  | SW1  | SW2  | SW3  | SW4  | SW5  |                    | SW5  | SW4  | SW3  | SW2  | SW1  | SW7  | SW6  |
// | SW13 | SW14 | SW8  | SW9  | SW10 | SW11 | SW12 |                    | SW12 | SW11 | SW10 | SW9  | SW8  | SW14 | SW13 |
// | SW20 | SW21 | SW15 | SW16 | SW17 | SW18 | SW19 |                    | SW19 | SW18 | SW17 | SW16 | SW15 | SW21 | SW20 |
// | SW28 | SW29 | SW23 | SW24 | SW25 | SW26 | SW27 |                    | SW27 | SW26 | SW25 | SW24 | SW23 | SW29 | SW28 |
//                      | SW31 | SW32 | SW33 | SW34 | SW38 |      | SW38 | SW34 | SW33 | SW32 | SW31 | 
//                      | SW35 | SW36 | SW37 |                                  | SW37 | SW36 | SW35 |

            display-name = "Home 110";
            bindings = <
&none               &none         &none         &none              &none             &none                      &none                           &none  &none       &none          &none              &none         &none         &none
&kp ESC             &kp B         &kp Y         &hrht LS(RCTRL) O  &kp U             &glstk LY_FUNCTIONS APOS   &none                           &none  &kp SEMI    &kp L          &hrht LS(RCTRL) D  &kp W         &kp V         &kp Z
&hrht CAPSLOCK TAB  &hrht LWIN C  &hrht LALT I  &hrht LCTRL E      &hrht LSHFT A     &lt LY_SHIFTED_N FSLH      &none                           &none  &kp COMMA   &hrht LSHFT H  &hrht LCTRL T      &hrht LALT S  &hrht LWIN N  &kp Q
&kp LBKT            &kp G         &hrht RALT X  &hrht RCTRL J      &lt LY_NUMBERS K  &gltog LY_CURSORS BSLH     &none                           &none  &kp PERIOD  &kp R          &hrht RCTRL M      &hrht RALT F  &kp P         &kp GRAVE
                                                &none              &none             &none                      &none  &td_menus     &kp ENTER  &none  &none       &none          &none
                                                &kp RBKT           &kp DEL           &kp BSPC                                                          &kp SPACE   &kp MINUS      &kp EQUAL    
            >;

            sensor-bindings = <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };

        layer_1 { // Numbers
// | SW6  | SW7  | SW1  | SW2  | SW3  | SW4  | SW5  |                    | SW5  | SW4  | SW3  | SW2  | SW1  | SW7  | SW6  |
// | SW13 | SW14 | SW8  | SW9  | SW10 | SW11 | SW12 |                    | SW12 | SW11 | SW10 | SW9  | SW8  | SW14 | SW13 |
// | SW20 | SW21 | SW15 | SW16 | SW17 | SW18 | SW19 |                    | SW19 | SW18 | SW17 | SW16 | SW15 | SW21 | SW20 |
// | SW28 | SW29 | SW23 | SW24 | SW25 | SW26 | SW27 |                    | SW27 | SW26 | SW25 | SW24 | SW23 | SW29 | SW28 |
//                      | SW31 | SW32 | SW33 | SW34 | SW38 |      | SW38 | SW34 | SW33 | SW32 | SW31 | 
//                      | SW35 | SW36 | SW37 |                                  | SW37 | SW36 | SW35 |
            display-name = "Numbers";
            bindings = <
&trans &trans &trans &trans &trans &trans         &trans                   &trans &trans &trans &trans &trans &trans    &trans
&trans &trans &trans &trans &trans &trans         &trans                   &trans &trans &kp N7 &kp N8 &kp N9 &kp N0    &trans
&trans &trans &trans &trans &trans &trans         &trans                   &trans &trans &kp N4 &kp N5 &kp N6 &kp MINUS &trans
&trans &trans &trans &trans &trans &mo LY_CURSORS &trans                   &trans &trans &kp N1 &kp N2 &kp N3 &kp EQUAL &trans
                     &trans &trans &trans         &trans &trans     &trans &trans &trans &trans &trans
                     &trans &trans &trans                                         &trans &trans &trans
            >;
        };

        layer_2 { // Shifted N
// | SW6  | SW7  | SW1  | SW2  | SW3  | SW4  | SW5  |                    | SW5  | SW4  | SW3  | SW2  | SW1  | SW7  | SW6  |
// | SW13 | SW14 | SW8  | SW9  | SW10 | SW11 | SW12 |                    | SW12 | SW11 | SW10 | SW9  | SW8  | SW14 | SW13 |
// | SW20 | SW21 | SW15 | SW16 | SW17 | SW18 | SW19 |                    | SW19 | SW18 | SW17 | SW16 | SW15 | SW21 | SW20 |
// | SW28 | SW29 | SW23 | SW24 | SW25 | SW26 | SW27 |                    | SW27 | SW26 | SW25 | SW24 | SW23 | SW29 | SW28 |
//                      | SW31 | SW32 | SW33 | SW34 | SW38 |      | SW38 | SW34 | SW33 | SW32 | SW31 | 
//                      | SW35 | SW36 | SW37 |                                  | SW37 | SW36 | SW35 |
            display-name = "Shifted N";
            bindings = <
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &trans     &trans     &trans     &trans        &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0)    &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp LS(N4) &kp LS(N5) &kp LS(N6) &kp LS(MINUS) &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(EQUAL) &trans
                     &trans &trans &trans &trans &trans     &trans &trans &trans &trans     &trans
                     &trans &trans &trans                                 &trans &trans     &trans
            >;
        };

        layer_3 { // Cursor
// | SW6  | SW7  | SW1  | SW2  | SW3  | SW4  | SW5  |                    | SW5  | SW4  | SW3  | SW2  | SW1  | SW7  | SW6  |
// | SW13 | SW14 | SW8  | SW9  | SW10 | SW11 | SW12 |                    | SW12 | SW11 | SW10 | SW9  | SW8  | SW14 | SW13 |
// | SW20 | SW21 | SW15 | SW16 | SW17 | SW18 | SW19 |                    | SW19 | SW18 | SW17 | SW16 | SW15 | SW21 | SW20 |
// | SW28 | SW29 | SW23 | SW24 | SW25 | SW26 | SW27 |                    | SW27 | SW26 | SW25 | SW24 | SW23 | SW29 | SW28 |
//                      | SW31 | SW32 | SW33 | SW34 | SW38 |      | SW38 | SW34 | SW33 | SW32 | SW31 | 
//                      | SW35 | SW36 | SW37 |                                  | SW37 | SW36 | SW35 |
            display-name = "Cursors";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                     &trans  &trans     &trans    &trans     &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                     &trans  &kp LC(X)  &kp HOME  &kp UP     &kp PG_UP  &trans    &gltog_off LY_CURSORS
&trans  &trans  &trans  &trans  &trans  &trans  &trans                     &trans  &kp LC(V)  &kp LEFT  &trans     &kp RIGHT  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                     &trans  &kp LC(C)  &kp END   &kp DOWN   &kp PG_DN  &trans    &mac_enterexitpopup
                        &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans     &trans    &trans
                        &trans  &trans  &trans                                     &trans     &trans    &trans
            >;
        };

        layer_4 { // Functions
// | SW6  | SW7  | SW1  | SW2  | SW3  | SW4  | SW5  |                    | SW5  | SW4  | SW3  | SW2  | SW1  | SW7  | SW6  |
// | SW13 | SW14 | SW8  | SW9  | SW10 | SW11 | SW12 |                    | SW12 | SW11 | SW10 | SW9  | SW8  | SW14 | SW13 |
// | SW20 | SW21 | SW15 | SW16 | SW17 | SW18 | SW19 |                    | SW19 | SW18 | SW17 | SW16 | SW15 | SW21 | SW20 |
// | SW28 | SW29 | SW23 | SW24 | SW25 | SW26 | SW27 |                    | SW27 | SW26 | SW25 | SW24 | SW23 | SW29 | SW28 |
//                      | SW31 | SW32 | SW33 | SW34 | SW38 |      | SW38 | SW34 | SW33 | SW32 | SW31 | 
//                      | SW35 | SW36 | SW37 |                                  | SW37 | SW36 | SW35 |
            display-name = "Functions";
            bindings = <
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans   &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp F7 &kp F8 &kp F9 &kp F10  &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp F4 &kp F5 &kp F6 &kp F11  &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp F1 &kp F2 &kp F3 &kp F12  &trans
                     &trans &trans &trans &trans &trans     &trans &trans &trans &trans &trans
                     &trans &trans &trans                                 &trans &trans &trans
            >;
        };

        layer_5 { // template
// | SW6  | SW7  | SW1  | SW2  | SW3  | SW4  | SW5  |                    | SW5  | SW4  | SW3  | SW2  | SW1  | SW7  | SW6  |
// | SW13 | SW14 | SW8  | SW9  | SW10 | SW11 | SW12 |                    | SW12 | SW11 | SW10 | SW9  | SW8  | SW14 | SW13 |
// | SW20 | SW21 | SW15 | SW16 | SW17 | SW18 | SW19 |                    | SW19 | SW18 | SW17 | SW16 | SW15 | SW21 | SW20 |
// | SW28 | SW29 | SW23 | SW24 | SW25 | SW26 | SW27 |                    | SW27 | SW26 | SW25 | SW24 | SW23 | SW29 | SW28 |
//                      | SW31 | SW32 | SW33 | SW34 | SW38 |      | SW38 | SW34 | SW33 | SW32 | SW31 | 
//                      | SW35 | SW36 | SW37 |                                  | SW37 | SW36 | SW35 |
            display-name = "template";
            bindings = <
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans &trans
                     &trans &trans &trans &trans &trans     &trans &trans &trans &trans &trans
                     &trans &trans &trans                                 &trans &trans &trans
            >;
        };

        
    }; // keymap
};
