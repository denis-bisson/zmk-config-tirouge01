/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define CA_SINGLE_QUOTE (LS(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_COMMA_AND_LESS_THAN))) // '
#define CA_EACU SLASH // Ã©

&soft_off {
    hold-time-ms = <2000>; // Only turn off if the key is held for 2 seconds or longer.
};

// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  B  |  Y  |  O   |  U   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  C  |  I  |  E   |  A   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  G  |  X  |  J   |  K   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

/ {
        combos {
            compatible = "zmk,combos";
            combo_bebe {
                timeout-ms = <100>;
                key-positions = <1 52>;
                layers = <0 27>;
                bindings = <&kp CA_EACU>;
            };
        };
    
        behaviors {
        apolftpr: apostrophe_left_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp CA_SINGLE_QUOTE>, <&kp LEFT_PARENTHESIS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comasemi: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0
            display-name = "base";
            bindings = <
&kp ESC     &kp N1     &kp N2    &kp N3    &kp N4  &kp N5        &kp N6     &kp N7    &kp N8    &kp N9    &kp N0     &kp GRAVE
&kp TAB     &kp B      &kp Y     &kp O     &kp U   &apolftpr     &kp Y      &kp U     &kp I     &kp O     &kp P      &kp MINUS
&kp LCTRL   &kp C      &kp I     &kp E     &kp A   &comasemi     &kp H      &kp J     &kp K     &kp L     &kp SEMI   &kp SQT
&kp LSHFT   &kp G      &kp X     &kp J     &kp K   &kp MINUS     &kp LBKT   &kp RBKT  &kp N     &kp M     &kp COMMA  &kp DOT
&kp CA_EACU &kp N2     &kp N3    &kp N4    &kp N5  &kp BSPC      &kp SPACE  &kp N5    &kp N4    &kp N3    &kp N2     &kp N1
&kp LSHFT   &kp LCTRL  &kp LGUI  &kp LALT  &mo 1   &mo 2         &mo 2      &mo 1     &kp RALT  &kp RGUI  &kp RCTRL  &kp RSHFT
            >;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4     &trans     &trans     &trans    &trans    &trans    &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5       &kp F6           &kp F7     &kp F8     &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR   &kp PRCNT        &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &trans        &trans        &trans        &trans       &trans           &trans     &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
&trans      &trans        &trans        &trans        &trans       &trans           &trans     &trans     &trans    &trans    &trans    &trans
&trans      &trans        &trans        &trans        &trans       &trans           &trans     &trans     &trans    &trans    &trans    &trans
            >;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans      &trans       &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5      &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6      &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12     &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
&trans     &trans  &trans  &trans   &trans   &trans      &trans       &trans     &trans     &trans    &trans     &trans
&trans     &trans  &trans  &trans   &trans   &trans      &trans       &trans     &trans     &trans    &trans     &trans
            >;
        };
    };
};
